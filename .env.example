# OpenAI API Configuration
OPENAI_API_KEY=your-openai-api-key
OPENAI_API_TYPE=openai  # Use 'azure' if using Azure OpenAI
ENCODER_API_TYPE="openai"

# Search Engine API Configuration (choose one)
RETRIEVER_TYPE=serper  # Options: serper, bing, tavily
SERPER_API_KEY=your-serper-api-key
# BING_SEARCH_API_KEY=your-bing-api-key
# TAVILY_API_KEY=your-tavily-api-key

# Application Configuration
HUMAN_WAIT_TIME=10  # Seconds to wait for human input after each AI message
NUM_TURNS=10  # Number of conversation turns

# Co-Storm Algorithm Parameters
RETRIEVE_TOP_K=10  # Number of search results to retrieve
MAX_SEARCH_QUERIES=2  # Maximum number of search queries
MAX_SEARCH_THREAD=5  # Maximum number of search threads
MAX_SEARCH_QUERIES_PER_TURN=3  # Maximum search queries per turn
WARMSTART_MAX_NUM_EXPERTS=3  # Maximum number of experts in warmstart
WARMSTART_MAX_TURN_PER_EXPERTS=2  # Maximum turns per expert in warmstart
WARMSTART_MAX_THREAD=3  # Maximum threads in warmstart
MAX_THREAD_NUM=10  # Maximum number of threads
MAX_NUM_ROUND_TABLE_EXPERTS=2  # Maximum number of round table experts
MODERATOR_OVERRIDE_N_CONSECUTIVE_ANSWERING_TURN=3  # Number of consecutive turns before moderator override
NODE_EXPANSION_TRIGGER_COUNT=10  # Node expansion trigger count

# Flask Configuration
# For production, set FLASK_ENV to 'production' and FLASK_DEBUG to 0
FLASK_ENV=development  # Set to 'production' for production deployment
FLASK_DEBUG=1  # Set to 0 for production deployment

# Security Configuration
# Generate a strong random key: python -c "import secrets; print(secrets.token_hex(24))"
SECRET_KEY=generate-a-secure-random-key-and-keep-it-secret
# CORS configuration - comma-separated list of allowed origins
CORS_ORIGINS=http://localhost:5001,http://127.0.0.1:5001  # For production, list specific trusted domains
# Server binding - for production, bind to localhost and use a reverse proxy
HOST=127.0.0.1  # Use 0.0.0.0 only for development or when behind a secure reverse proxy
PORT=5001

# Rate Limiting Configuration
RATE_LIMIT_WINDOW=60  # Time window in seconds for rate limiting
MAX_REQUESTS_PER_WINDOW=30  # Maximum number of requests allowed in the time window

